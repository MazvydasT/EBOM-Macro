<UserControl x:Name="RootSessionView" x:Class="EBOM_Macro.SessionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:EBOM_Macro.Converters"
             xmlns:states="clr-namespace:EBOM_Macro.States"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=states:SessionState, IsDesignTimeCreatable=True}"
             d:DesignHeight="549" d:DesignWidth="800" Background="White">
    <UserControl.Resources>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        </Style>

        <Viewbox x:Key="Target" x:Shared="False" Height="16" Width="16">
            <Canvas Width="496" Height="512">
                <Path Fill="Black" Data="M248,8C111.03,8 0,119.03 0,256 0,392.97 111.03,504 248,504 384.97,504 496,392.97 496,256 496,119.03 384.97,8 248,8z M248,440C146.31,440 64,357.71 64,256 64,154.31 146.29,72 248,72 349.69,72 432,154.29 432,256 432,357.69 349.71,440 248,440z M248,128C177.31,128 120,185.31 120,256 120,326.69 177.31,384 248,384 318.69,384 376,326.69 376,256 376,185.31 318.69,128 248,128z M248,320C212.71,320 184,291.29 184,256 184,220.71 212.71,192 248,192 283.29,192 312,220.71 312,256 312,291.29 283.29,320 248,320z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="Redo" x:Shared="False" Height="16" Width="16">
            <Canvas Width="512" Height="512">
                <Path Fill="Black" Data="M256.455,8C322.724,8.119,382.892,34.233,427.314,76.685L463.029,40.97C478.149,25.851,504,36.559,504,57.941L504,192C504,205.255,493.255,216,480,216L345.941,216C324.559,216,313.851,190.149,328.97,175.029L370.72,133.279C339.856,104.38 299.919,88.372 257.49,88.006 165.092,87.208 87.207,161.983 88.0059999999999,257.448 88.764,348.009 162.184,424 256,424 297.127,424 335.997,409.322 366.629,382.444 371.372,378.283 378.535,378.536 382.997,382.997L422.659,422.659C427.531,427.531 427.29,435.474 422.177,440.092 378.202,479.813 319.926,504 256,504 119.034,504 8.001,392.967 8,256.002 7.999,119.193 119.646,7.755 256.455,8z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="FileImportIcon" x:Shared="False">
            <Canvas Width="384" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M224,136L224,0 24,0C10.7,0,0,10.7,0,24L0,488C0,501.3,10.7,512,24,512L360,512C373.3,512,384,501.3,384,488L384,160 248,160C234.8,160,224,149.2,224,136z M289.18,352.01L224,352.01 224,432.01C224,440.85,216.84,448.01,208,448.01L176,448.01C167.16,448.01,160,440.85,160,432.01L160,352.01 94.82,352.01C80.54,352.01,73.41,334.72,83.55,324.65L179.97,228.95C186.62,222.34,197.36,222.34,204.01,228.95L300.43,324.65C310.58,334.72,303.46,352.01,289.18,352.01z M377,105L279.1,7C274.6,2.5,268.5,0,262.1,0L256,0 256,128 384,128 384,121.9C384,115.6,381.5,109.5,377,105z"/>
            </Canvas>
        </Viewbox>

        <Viewbox x:Key="OpenFolder" x:Shared="False">
            <Canvas Width="576" Height="512">
                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M572.694,292.093L500.27,416.248A63.997,63.997,0,0,1,444.989,448L45.025,448C26.502,448,14.961,427.907,24.294,411.907L96.718,287.752A64,64,0,0,1,152,256L551.964,256C570.487,256,582.028,276.093,572.694,292.093z M152,224L480,224 480,176C480,149.49,458.51,128,432,128L272,128 208,64 48,64C21.49,64,0,85.49,0,112L0,390.046 69.077,271.628C86.214,242.25,117.989,224,152,224z"/>
            </Canvas>
        </Viewbox>
    </UserControl.Resources>

    <Grid>
        <Grid Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="100" Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition MinWidth="100" Width="3*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition x:Name="AttributesColumn" MinWidth="{Binding ElementName=Attributes, Path=IsExpanded, Converter={converters:ExpandedMinDimensionConverter MinValue=200}}" Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer VerticalScrollBarVisibility="Auto" FlowDirection="RightToLeft">
                <StackPanel FlowDirection="LeftToRight" Margin="5,0,10,0">

                    <StackPanel>
                        <TextBlock Text="Translation system:" ToolTip="Affects how path to JT is constructed"/>

                        <RadioButton Content="Theorem" IsChecked="True" GroupName="TranslationSystem"/>
                        <RadioButton Content="COM/FOX" IsChecked="{Binding InputState.ComFoxTranslationSystemIsUsed}" GroupName="TranslationSystem"/>
                    </StackPanel>

                    <StackPanel Margin="0,15,0,0">
                        <TextBlock Text="Path to EBOM report: *" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Top"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBox x:Name="EbomReportPathTextBox" Text="{Binding InputState.EBOMReportPath, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" IsReadOnly="True"/>
                            <Button x:Name="EbomReportPathButton" Grid.Column="1" Command="{Binding InputState.BrowseEBOMReport, Mode=OneTime}" Content="{StaticResource FileImportIcon}" ToolTip="Load EBOM report" VerticalAlignment="Center" Height="30" Width="30" Margin="5,0,0,0"/>

                        </Grid>

                        <ProgressBar Height="5" Width="{Binding ElementName=EbomReportPathTextBox, Path=ActualWidth}" Maximum="1" Value="{Binding ProgressState.EBOMReportReadProgress, Mode=OneWay}" HorizontalAlignment="Left" Margin="0,0,0,1"/>

                        <TextBox Text="{Binding ProgressState.EBOMReportReadMessage}" IsReadOnly="True" BorderThickness="0" TextWrapping="Wrap" FontSize="11"/>
                    </StackPanel>

                    <StackPanel Margin="0,5,0,0">
                        <CheckBox Content="System Root relative path" IsChecked="{Binding InputState.SystemRootRelativePath}"/>

                        <StackPanel Visibility="{Binding InputState.SystemRootRelativePath, Converter={converters:SystemRootPathVisibilityConverter}}">
                            <TextBlock Text="Path to System Root folder: *" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Top"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Text="{Binding InputState.SystemRootFolderPath}" VerticalAlignment="Center" IsReadOnly="True"/>
                                <Button Grid.Column="1" Command="{Binding InputState.BrowseSystemRootFolder, Mode=OneTime}" Content="{StaticResource OpenFolder}" ToolTip="Select System Root folder" VerticalAlignment="Center" Height="30" Width="30" Margin="5,0,0,0"/>
                            </Grid>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Margin="0,5,0,0">
                        <TextBlock Text="Path to LDI folder: *" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Top"/>

                        <Grid>
                            <Grid.IsEnabled>
                                <MultiBinding Converter="{converters:LDIFolderPathBrowseEnabledConverter}">
                                    <Binding Path="InputState.SystemRootRelativePath"/>
                                    <Binding Path="InputState.SystemRootFolderPath"/>
                                </MultiBinding>
                            </Grid.IsEnabled>
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBox Text="{Binding InputState.AdjustedLDIPath, Mode=OneWay}" VerticalAlignment="Center" IsReadOnly="True"/>
                            <Button Grid.Column="1" Command="{Binding InputState.BrowseLDIFolder, Mode=OneTime}" Content="{StaticResource OpenFolder}" ToolTip="Select LDI folder" VerticalAlignment="Center" Height="30" Width="30" Margin="5,0,0,0"/>
                        </Grid>
                    </StackPanel>

                    <StackPanel Margin="0,10,0,0">
                        <TextBlock Text="Existing data:" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Top"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBox x:Name="ExistingDataPathTextBox" Text="{Binding InputState.ExistingDataPath, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" IsReadOnly="True" BorderThickness="1,1,0,1" SnapsToDevicePixels="True"/>

                            <Border BorderThickness="0,1,1,1" BorderBrush="{Binding ElementName=ExistingDataPathTextBox, Path=BorderBrush}" Grid.Column="1" Height="{Binding ElementName=ExistingDataPathTextBox, Path=ActualHeight}" Width="Auto" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                <Button Visibility="{Binding InputState.ExistingDataPath, Converter={converters:String2ButtonVisibilityConverter}}" Command="{Binding InputState.ClearExistingData, Mode=OneTime}" Content="{StaticResource Clear}" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" BorderThickness="0" VerticalAlignment="Stretch" BorderBrush="{x:Null}"/>
                            </Border>

                            <Button Grid.Column="2" Command="{Binding InputState.BrowseExistingData, Mode=OneTime}" Content="{StaticResource FileImportIcon}" ToolTip="Load EBOM report" VerticalAlignment="Center" Height="30" Width="30" Margin="5,0,0,0"/>

                        </Grid>

                        <ProgressBar Height="5" Width="{Binding ElementName=EbomReportPathTextBox, Path=ActualWidth}" Maximum="1" Value="{Binding ProgressState.ExistingDataReadProgress, Mode=OneWay}" HorizontalAlignment="Left" Margin="0,0,0,1"/>

                        <TextBox Text="{Binding ProgressState.ExistingDataReadMessage, Mode=OneWay}" IsReadOnly="True" TextWrapping="Wrap" FontSize="11" BorderThickness="0"/>
                    </StackPanel>

                    <StackPanel Margin="0,5,0,0">
                        <CheckBox x:Name="ReuseExtIdsCheckBox"  IsChecked="{Binding InputState.ReuseExternalIds}" Content="Reuse ExternalIds">
                            <CheckBox.Visibility>
                                <MultiBinding Converter="{converters:ReuseExtIdCheckBoxVisibilityConverter}">
                                    <Binding Path="ProgressState.ExistingDataReadProgress" Mode="OneWay"/>
                                    <Binding Path="ProgressState.ExistingDataReadError" Mode="OneWay"/>
                                </MultiBinding>
                            </CheckBox.Visibility>
                        </CheckBox>

                        <CheckBox IsEnabled="False" Content="{Binding ElementName=ReuseExtIdsCheckBox, Path=Content, Mode=OneTime}" Visibility="{Binding ElementName=ReuseExtIdsCheckBox, Path=Visibility, Mode=OneWay, Converter={converters:VisibilityInverter}}"/>
                    </StackPanel>

                    <StackPanel Margin="0,15,0,0">
                        <TextBlock Text="ExternalId prefix:"/>

                        <Grid Height="{Binding ElementName=EbomReportPathButton, Path=ActualHeight}">
                            <TextBox Text="{Binding InputState.ExternalIdPrefixInput, UpdateSourceTrigger=PropertyChanged}" Width="{Binding ElementName=EbomReportPathTextBox, Path=ActualWidth}" TextWrapping="NoWrap" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Grid>
                    </StackPanel>

                    <StackPanel Margin="0,10,0,0">
                        <TextBlock Text="LDI folder to copy JT files from:" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Top"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBox x:Name="CopyFilesFromPathTextBox" Text="{Binding InputState.CopyFilesFromPath, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" IsReadOnly="True" BorderThickness="1,1,0,1" SnapsToDevicePixels="True"/>

                            <Border BorderThickness="0,1,1,1" BorderBrush="{Binding ElementName=CopyFilesFromPathTextBox, Path=BorderBrush}" Grid.Column="1" Height="{Binding ElementName=CopyFilesFromPathTextBox, Path=ActualHeight}" Width="Auto" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                <Button Visibility="{Binding InputState.CopyFilesFromPath, Converter={converters:String2ButtonVisibilityConverter}}" Command="{Binding InputState.ClearFileCopyFromPath, Mode=OneTime}" Content="{StaticResource Clear}" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" BorderThickness="0" VerticalAlignment="Stretch" BorderBrush="{x:Null}"/>
                            </Border>

                            <Button Grid.Column="2" Command="{Binding InputState.BrowseLDIFolderToCopyFilesFrom, Mode=OneTime}" Content="{StaticResource OpenFolder}" ToolTip="Select LDI folder to copy files from" VerticalAlignment="Center" Height="30" Width="30" Margin="5,0,0,0"/>

                        </Grid>

                        <StackPanel>
                            <CheckBox IsChecked="{Binding InputState.OverwriteExistingFiles}" x:Name="OverwriteFilesCheckBox" Visibility="{Binding InputState.CopyFilesFromPath, Converter={converters:String2ButtonVisibilityConverter}}" Content="Overwrite existing files"/>
                            <CheckBox IsEnabled="False" Content="{Binding ElementName=OverwriteFilesCheckBox, Path=Content, Mode=OneTime}" Visibility="{Binding ElementName=OverwriteFilesCheckBox, Path=Visibility, Mode=OneWay, Converter={converters:VisibilityInverter}}"/>
                        </StackPanel>
                    </StackPanel>

                </StackPanel>
            </ScrollViewer>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch"/>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <GroupBox Header="Filter" IsEnabled="{Binding ElementName=Items, Path=IsEnabled}" Margin="5,0,5,5">
                    <WrapPanel Orientation="Horizontal">
                        <CheckBox x:Name="UnchangedFilter" Content="Unchanged" IsChecked="True" Margin="0,0,10,0"/>
                        <CheckBox x:Name="ModifiedFilter" Content="Modified" IsChecked="True" Margin="0,0,10,0"/>
                        <CheckBox x:Name="NewFilter" Content="New" IsChecked="True" Margin="0,0,10,0"/>
                        <CheckBox x:Name="DeletedFilter" Content="Deleted" IsChecked="True"/>
                    </WrapPanel>
                </GroupBox>

                <TreeView x:Name="Items" IsEnabled="{Binding ElementName=ProcessingProgressBar, Path=Visibility, Mode=OneWay, Converter={converters:TreeViewIsEnabledConverter}}"
                          ItemsSource="{Binding InputState.Root}" BorderThickness="0" Margin="5,0" Grid.Row="1">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate>
                            <HierarchicalDataTemplate.ItemsSource>
                                <MultiBinding Converter="{converters:TreeViewFilterConverter}">
                                    <Binding Path="AllChildren"/>
                                    <Binding ElementName="UnchangedFilter" Path="IsChecked"/>
                                    <Binding ElementName="ModifiedFilter" Path="IsChecked"/>
                                    <Binding ElementName="NewFilter" Path="IsChecked"/>
                                    <Binding ElementName="DeletedFilter" Path="IsChecked"/>
                                    <Binding ElementName="Items" Path="DataContext.InputState.Items"/>
                                </MultiBinding>
                            </HierarchicalDataTemplate.ItemsSource>

                            <StackPanel Background="{Binding State, Converter={converters:State2ColourConverter}, Mode=OneWay}" Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding SelectWithoutDescendants}"
                                                  CommandParameter="{Binding Source={x:Reference Name=Items}, Path=DataContext.InputState}"
                                                  Icon="{StaticResource Target}"
                                                  Header="Select without descendants"/>

                                        <MenuItem Command="{Binding ResetSelection}"
                                                  CommandParameter="{Binding Source={x:Reference Name=Items}, Path=DataContext.InputState}"
                                                  Icon="{StaticResource Redo}"
                                                  Header="Reset selection"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>

                                <CheckBox Visibility="{Binding State, Converter={converters:State2CheckBoxVisibilityConverter}, Mode=OneWay}"
                                          IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                          Command="{Binding Click}"
                                          CommandParameter="{Binding ElementName=Items, Path=DataContext.InputState}"
                                          VerticalAlignment="Center" Margin="2,0,0,0"/>

                                <TextBlock Text="{Binding Title, Mode=OneTime}" Margin="5,0,2,0" VerticalAlignment="Center"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <ProgressBar x:Name="ProcessingProgressBar" Value="{Binding ProgressState.ComparisonProgress, Mode=OneWay}" IsIndeterminate="{Binding ProgressState.ComparisonProgress, Converter={converters:IsIndeterminateConverter}, Mode=OneWay}" Maximum="1" Height="5" Grid.Row="2" Margin="5,2,10,0">
                    <ProgressBar.Visibility>
                        <MultiBinding Converter="{converters:TreeViewProgressVisibilityConverter}">
                            <Binding Path="ProgressState.EBOMReportReadProgress"/>
                            <Binding Path="ProgressState.EBOMReportReadError"/>

                            <Binding Path="ProgressState.ExistingDataReadProgress"/>
                            <Binding Path="ProgressState.ExistingDataReadError"/>

                            <Binding Path="ProgressState.ComparisonProgress"/>

                            <Binding Path="InputState.LDIFolderPath"/>
                        </MultiBinding>
                    </ProgressBar.Visibility>
                </ProgressBar>

                <TextBox Visibility="{Binding ElementName=ProcessingProgressBar, Path=Visibility}" IsReadOnly="True" TextWrapping="Wrap" FontSize="11" BorderThickness="0" Grid.Row="3" Margin="5,0,10,0">
                    <TextBox.Text>
                        <MultiBinding Converter="{converters:ComparisonMessageConverter}">
                            <Binding ElementName="ProcessingProgressBar" Path="IsIndeterminate"/>
                            <Binding Path="ProgressState.ComparisonMessage"/>
                        </MultiBinding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <GridSplitter Visibility="{Binding ElementName=Attributes, Path=IsExpanded, Converter={converters:SplitterVisibilityConverter}}" Width="5" Grid.Column="3" HorizontalAlignment="Stretch" DragCompleted="GridSplitter_DragCompleted"/>

            <Expander x:Name="Attributes" Grid.Column="4" ExpandDirection="Left" IsExpanded="False" Padding="5,0" Collapsed="Attributes_Collapsed" Expanded="Attributes_Expanded" >
                <Expander.Header>
                    <TextBlock FontSize="14">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </TextBlock.LayoutTransform>Attributes</TextBlock>
                </Expander.Header>

                <Grid>
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ItemsControl DataContext="{Binding ElementName=Items, Path=SelectedItem}" HorizontalContentAlignment="Stretch">
                            <ItemsControl.ItemsSource>
                                <MultiBinding Converter="{converters:ItemAttributesToViewConverter}">
                                    <Binding Path="ChangedAttributes" FallbackValue="{x:Null}"/>
                                    <Binding Path="Attributes.AsDictionary" FallbackValue="{x:Null}"/>
                                </MultiBinding>
                            </ItemsControl.ItemsSource>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Background="{Binding NewValue, Converter={converters:AttributeBackgroundColourConverter}}">
                                        <Grid Margin="2.5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.ColumnSpan="2" Text="{Binding Name}" FontWeight="DemiBold"/>

                                            <TextBlock Visibility="{Binding ElementName=NewValueLabel, Path=Visibility}" Grid.Row="1" Text="Current: " HorizontalAlignment="Stretch" TextAlignment="Right" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding CurrentValue}" IsReadOnly="True" HorizontalAlignment="Stretch" BorderThickness="0" Padding="0" TextWrapping="Wrap" Background="{x:Null}"/>

                                            <TextBlock x:Name="NewValueLabel" Visibility="{Binding NewValue, Converter={converters:NewAttributeValueVisibilityConverter}}" Grid.Row="2" Text="New: " HorizontalAlignment="Stretch" TextAlignment="Right" VerticalAlignment="Center" Padding="0"/>
                                            <TextBox Visibility="{Binding ElementName=NewValueLabel, Path=Visibility}" Grid.Row="2" Grid.Column="1" Text="{Binding NewValue}" IsReadOnly="True" HorizontalAlignment="Stretch" BorderThickness="0" Padding="0" TextWrapping="Wrap" Background="{x:Null}"/>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>

                    <Button Content="{StaticResource CopyIcon}"
                            Command="{Binding CopyAttributes}"
                            CommandParameter="{Binding ElementName=Items, Path=SelectedItem}"
                            IsEnabled="{Binding ElementName=Items, Path=SelectedItem, Converter={converters:CopyAttributesButtonIsEnabledConverter}}"
                            ToolTip="Copy to clipboard" Width="20" Height="20" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,0,20,0"/>
                </Grid>
            </Expander>

            <Expander Header="Stats" Grid.Row="1" Grid.ColumnSpan="5" ExpandDirection="Up" Margin="5,5,3,0">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox x:Name="ShowStatsForSelected" Content="Selected" IsChecked="True" VerticalAlignment="Center"/>
                        <CheckBox x:Name="ShowStatsForAvailable" Content="Available" IsChecked="True" Margin="5,0,0,0" VerticalAlignment="Center"/>
                        <Button Content="{StaticResource CopyIcon}"
                                Command="{Binding CopyStats}"
                                ToolTip="Copy to clipboard"
                                Margin="5,0,0,0" Height="20" Width="20">
                            <Button.CommandParameter>
                                <MultiBinding Converter="{converters:CopyStatsParametersConverter}">
                                    <Binding ElementName="ShowStatsForSelected" Path="IsChecked"/>
                                    <Binding ElementName="ShowStatsForAvailable" Path="IsChecked"/>
                                </MultiBinding>
                            </Button.CommandParameter>
                        </Button>
                    </StackPanel>

                    <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                        <ItemsControl HorizontalAlignment="Left" Margin="0,5,0,0" DataContext="{Binding InputState.StatsState}">
                            <ItemsControl.ItemsSource>
                                <MultiBinding Converter="{converters:StatsConverter}">

                                    <Binding ElementName="ShowStatsForSelected" Path="IsChecked"/>
                                    <Binding ElementName="ShowStatsForAvailable" Path="IsChecked"/>

                                    <Binding Path="AsTable"/>
                                </MultiBinding>
                            </ItemsControl.ItemsSource>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Grid.IsSharedSizeScope="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ItemsControl ItemsSource="{Binding}"
                                              Background="{Binding Converter={converters:StatsColumnColourConverter}}"
                                              Padding="0,2.5">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderBrush="Black" BorderThickness="{Binding Converter={converters:StatsTableBorderConverter}}">
                                                    <Grid Margin="5,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="{Binding ColumnIndex, Converter={converters:SharedSizeGroupRowHeaderConverter}}"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Grid Visibility="{Binding Converter={converters:StatsValueVisibilityConverter}}" HorizontalAlignment="Center">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition SharedSizeGroup="{Binding ColumnIndex, ConverterParameter=SelectedValue, Converter={converters:SharedSizeGroupConverter}}" Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition SharedSizeGroup="{Binding ColumnIndex, ConverterParameter=AvailableValue, Converter={converters:SharedSizeGroupConverter}}" Width="Auto"/>
                                                            </Grid.ColumnDefinitions>

                                                            <TextBlock Text="{Binding SelectedValue, StringFormat={}{0:n0}}"
                                                               Visibility="{Binding ElementName=ShowStatsForSelected, Path=IsChecked, Converter={converters:StatsValuePartVisibilityConverter}}"
                                                               Grid.Column="0" TextAlignment="Right"/>
                                                            <TextBlock Text="/" Grid.Column="1" Margin="2.5,0">
                                                                <TextBlock.Visibility>
                                                                    <MultiBinding Converter="{converters:StatsValuePartSeparatorConverter}">
                                                                        <Binding ElementName="ShowStatsForSelected" Path="IsChecked"/>
                                                                        <Binding ElementName="ShowStatsForAvailable" Path="IsChecked"/>
                                                                    </MultiBinding>
                                                                </TextBlock.Visibility>
                                                            </TextBlock>
                                                            <TextBlock Text="{Binding AvailableValue, StringFormat={}{0:n0}}"
                                                               Visibility="{Binding ElementName=ShowStatsForAvailable, Path=IsChecked, Converter={converters:StatsValuePartVisibilityConverter}}"
                                                               Grid.Column="2" TextAlignment="Right"/>
                                                        </Grid>

                                                        <TextBlock Text="{Binding Value}"
                                                           Visibility="{Binding Converter={converters:StatsHeaderVisibilityConverter}}"
                                                           FontWeight="{Binding Converter={converters:StatsFontWeightConverter}}"
                                                           TextAlignment="{Binding Converter={converters:StatsTextAlignemntConverter}}"
                                                           Padding="2.5,0"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </StackPanel>
            </Expander>
        </Grid>
    </Grid>
</UserControl>
